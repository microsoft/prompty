##########################################
# WARNING: This is an auto-generated file.
# DO NOT EDIT THIS FILE DIRECTLY
# ANY EDITS WILL BE LOST
##########################################
from dataclasses import dataclass, field
from typing import Any

from ._Scale import Scale


@dataclass
class HostedContainerDefinition:
    """Definition for a containerized AI agent hosted by the provider.This includes the container registry information and scaling configuration.
    Attributes
    ----------
    scale : Scale
        Instance scaling configuration
    context : Any
        Container context for building the container image
    """

    scale: Scale = field(default_factory=Scale)
    context: Any = field(default=None)

    @staticmethod
    def load(data: Any) -> "HostedContainerDefinition":
        """Load a HostedContainerDefinition instance."""

        if not isinstance(data, dict):
            raise ValueError(f"Invalid data for HostedContainerDefinition: {data}")

        # create new instance
        instance = HostedContainerDefinition()
        if data is not None and "scale" in data:
            instance.scale = Scale.load(data["scale"])
        if data is not None and "context" in data:
            instance.context = data["context"]
        return instance
